Object subclass: #CoroutineCAP	instanceVariableNames: 'aBlock aResumeBlock aContext'	classVariableNames: ''	poolDictionaries: ''	category: 'CAP'!!CoroutineCAP commentStamp: '<historical>' prior: 0!A CoroutineCAP is nothing.!!CoroutineCAP methodsFor: 'accessing' stamp: 'AlvarYDaniel 1/14/2017 18:16'!aResumeBlock: anObject	aResumeBlock := anObject! !!CoroutineCAP methodsFor: 'accessing' stamp: 'Danil 1/16/2017 00:41'!aContext: anObject	aContext := anObject! !!CoroutineCAP methodsFor: 'accessing' stamp: 'AlvarYDaniel 1/14/2017 17:32'!aBlock	^ aBlock! !!CoroutineCAP methodsFor: 'accessing' stamp: 'Danil 1/16/2017 00:41'!aContext	^ aContext! !!CoroutineCAP methodsFor: 'accessing' stamp: 'AlvarYDaniel 1/14/2017 17:32'!aBlock: anObject	aBlock := anObject! !!CoroutineCAP methodsFor: 'accessing' stamp: 'AlvarYDaniel 1/14/2017 18:16'!aResumeBlock	^ aResumeBlock! !!CoroutineCAP methodsFor: 'as yet unclassified' stamp: 'Danil 1/16/2017 01:59'!value: aString	"comment stating purpose of message"	aContext notNil 		ifTrue: [ aContext value: aString ]		ifFalse: [aBlock value: aResumeBlock value: aString].	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CoroutineCAP class	instanceVariableNames: ''!!CoroutineCAP class methodsFor: 'initialize' stamp: 'AlvaroYDaniel 1/19/2017 17:55'!maker: aBlock	"Creates a coroutine"	| aCoroutine |	aCoroutine := self new.	aCoroutine aBlock: aBlock.	aCoroutine aContext: nil.	aCoroutine aResumeBlock: [ :param1 :param2| 									Continuation callcc: 									[:k | 										aCoroutine aContext: k.										param1 value: param2.									].								].	^ aCoroutine.	! !